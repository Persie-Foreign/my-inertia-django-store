// SkinProfileForm.jsx
import React, { useState } from 'react';

export default function SkinProfileForm() {
    const [selectedConcerns, setSelectedConcerns] = useState([]);
    const [skinType, setSkinType] = useState('');

    const concernOptions = [
        'Acne', 'Ageing', 'Pigmentation', 'Redness', 'Sensitivity',
        'Scarring', 'Blackheads', 'Dryness', 'Oiliness', 'Large Pores',
        'Wrinkles', 'Sun Damage', 'Irritation', 'Texture'
    ];

    const skinTypeOptions = [
        'Normal', 'Super Dry', 'Dry', 'Oily', 'Combination'
    ];

    const handleConcernToggle = (concern) => {
        // Prevent full page refresh or re-rendering
        if (selectedConcerns.includes(concern)) {
            setSelectedConcerns(prev => prev.filter(c => c !== concern));
        } else if (selectedConcerns.length < 5) {
            setSelectedConcerns(prev => [...prev, concern]);
        }
    };

    return (
        <div className="max-w-full mx-auto px-4 pt-8">
            {/* Skin Concerns */}
            <div className="mb-8">
                <h3 className="text-lg font-semibold mb-1">What are your skin concerns? (Optional)</h3>
                <p className="text-gray-500 mb-4">Choose up to 5 options</p>

                <div className="grid grid-cols-3 gap-2 sm:grid-cols-4 lg:grid-cols-5">
                    {concernOptions.map((option) => {
                        const isSelected = selectedConcerns.includes(option);
                        return (
                            <button
                                key={option}
                                type="button"
                                onClick={() => handleConcernToggle(option)}
                                className={`px-2 py-1 border rounded text-left transition duration-200 ease-in-out ${
                                    isSelected
                                        ? 'bg-green-900 text-white border-green-700 font-medium'
                                        : 'bg-white text-gray-700 border-gray-200 hover:bg-gray-50'
                                }`}
                            >
                                {option}
                            </button>
                        );
                    })}
                </div>
            </div>

            {/* Skin Type */}
            <div className="mb-8">
                <h3 className="text-lg font-semibold mb-4">What is your skin type? (Optional)</h3>
                <select
                    value={skinType}
                    onChange={(e) => setSkinType(e.target.value)}
                    className="w-full max-w-sm px-3 py-2 border border-gray-300 rounded-md focus:ring-green-500 focus:border-green-500"
                >
                    <option value="">Select an option</option>
                    {skinTypeOptions.map((option) => (
                        <option key={option} value={option}>{option}</option>
                    ))}
                </select>
            </div>

            {/* Disclaimer */}
            <div className="text-center mt-[5rem] text-gray-600">
                By continuing you agree to Devshop's{' '}
                <a href="#" className="underline text-blue-600">Terms and Conditions</a> and{' '}
                <a href="#" className="underline text-blue-600">Privacy Policy</a>.
            </div>
        </div>
    );
}
